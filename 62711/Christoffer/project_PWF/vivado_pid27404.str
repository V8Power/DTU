/*

Xilinx Vivado v2020.1 (64-bit) [Major: 2020, Minor: 1]
SW Build: 2902540 on Wed May 27 19:54:49 MDT 2020
IP Build: 2902112 on Wed May 27 22:43:36 MDT 2020

Process ID (PID): 27404
License: Customer

Current time: 	Thu Apr 27 09:20:57 CEST 2023
Time zone: 	Central European Standard Time (Europe/Paris)

OS: Windows 10
OS Version: 10.0
OS Architecture: amd64
Available processors (cores): 12

Screen size: 1920x1080
Screen resolution (DPI): 125
Available screens: 1
Default font: family=Segoe UI,name=Segoe UI,style=plain,size=15

Java version: 	9.0.4 64-bit
Java home: 	D:/Vivado/2020.1/tps/win64/jre9.0.4
Java executable location: 	D:/Vivado/2020.1/tps/win64/jre9.0.4/bin/java.exe
Java initial memory (-Xms): 	128 MB
Java maximum memory (-Xmx):	 3 GB


User name: 	felix
User home directory: C:/Users/felix
User working directory: C:/Users/felix/Documents/DTU/62711_Digital_systems_design/Git/DTU/62711/Christoffer/project_PWF
User country: 	US
User language: 	en
User locale: 	en_US

RDI_BASEROOT: D:/Vivado
HDI_APPROOT: D:/Vivado/2020.1
RDI_DATADIR: D:/Vivado/2020.1/data
RDI_BINDIR: D:/Vivado/2020.1/bin

Vivado preferences file location: C:/Users/felix/AppData/Roaming/Xilinx/Vivado/2020.1/vivado.xml
Vivado preferences directory: C:/Users/felix/AppData/Roaming/Xilinx/Vivado/2020.1/
Vivado layouts directory: C:/Users/felix/AppData/Roaming/Xilinx/Vivado/2020.1/data/layouts
PlanAhead jar file location: 	D:/Vivado/2020.1/lib/classes/planAhead.jar
Vivado log file location: 	C:/Users/felix/Documents/DTU/62711_Digital_systems_design/Git/DTU/62711/Christoffer/project_PWF/vivado.log
Vivado journal file location: 	C:/Users/felix/Documents/DTU/62711_Digital_systems_design/Git/DTU/62711/Christoffer/project_PWF/vivado.jou
Engine tmp dir: 	C:/Users/felix/Documents/DTU/62711_Digital_systems_design/Git/DTU/62711/Christoffer/project_PWF/.Xil/Vivado-27404-DESKTOP-MKAFNHE

Xilinx Environment Variables
----------------------------
XILINX: D:/Vivado/2020.1/ids_lite/ISE
XILINX_DSP: D:/Vivado/2020.1/ids_lite/ISE
XILINX_PLANAHEAD: D:/Vivado/2020.1
XILINX_VIVADO: D:/Vivado/2020.1
XILINX_VIVADO_HLS: D:/Vivado/2020.1


GUI allocated memory:	185 MB
GUI max memory:		3,072 MB
Engine allocated memory: 1,018 MB

Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.

*/

// TclEventType: START_GUI
// Tcl Message: start_gui 
// TclEventType: PROJECT_OPEN_DIALOG
// [GUI Memory]: 103 MB (+105405kb) [00:00:06]
// [Engine Memory]: 1,018 MB (+916453kb) [00:00:06]
// aK (cs): Older Project Version: addNotify
// Tcl Command: 'rdi::info_commands {device::*}'
// Tcl Command: 'rdi::info_commands {debug::*}'
// Tcl Command: 'rdi::info_commands {*}'
// HMemoryUtils.trashcanNow. Engine heap size: 1,018 MB. GUI used memory: 67 MB. Current time: 4/27/23, 9:20:58 AM CEST
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1002 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
// WARNING: HEventQueue.dispatchEvent() is taking  1001 ms.
selectButton(RDIResource.BaseDialog_OK, "OK"); // a (aK)
// Opening Vivado Project: C:\Users\felix\Documents\DTU\62711_Digital_systems_design\Git\DTU\62711\Christoffer\project_PWF\project_PWF.xpr. Version: Vivado v2018.2 
// bz (cs):  Open Project : addNotify
// TclEventType: DEBUG_PROBE_SET_CHANGE
dismissDialog("Older Project Version"); // aK (cs)
// Tcl Message: open_project C:/Users/felix/Documents/DTU/62711_Digital_systems_design/Git/DTU/62711/Christoffer/project_PWF/project_PWF.xpr 
// Tcl Message: INFO: [ProjectBase 1-489] The host OS only allows 260 characters in a normal path. The project is stored in a path with more than 80 characters. If you experience issues with IP, Block Designs, or files not being found, please consider moving the project to a location with a shorter path. Alternately consider using the OS subst command to map part of the path to a drive letter. Current project path is 'C:/Users/felix/Documents/DTU/62711_Digital_systems_design/Git/DTU/62711/Christoffer/project_PWF' 
// TclEventType: MSGMGR_MOVEMSG
// TclEventType: FILE_SET_NEW
// TclEventType: RUN_CURRENT
// TclEventType: PROJECT_DASHBOARD_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: PROJECT_DASHBOARD_GADGET_NEW
// TclEventType: PROJECT_DASHBOARD_GADGET_CHANGE
// TclEventType: FILE_SET_NEW
// TclEventType: PROJECT_NEW
// Tcl Message: open_project C:/Users/felix/Documents/DTU/62711_Digital_systems_design/Git/DTU/62711/Christoffer/project_PWF/project_PWF.xpr 
// Tcl Message: INFO: [ProjectBase 1-489] The host OS only allows 260 characters in a normal path. The project is stored in a path with more than 80 characters. If you experience issues with IP, Block Designs, or files not being found, please consider moving the project to a location with a shorter path. Alternately consider using the OS subst command to map part of the path to a drive letter. Current project path is 'C:/Users/felix/Documents/DTU/62711_Digital_systems_design/Git/DTU/62711/Christoffer/project_PWF' INFO: [Project 1-313] Project file moved from 'C:/Users/chris/OneDrive/Skrivebord/3. semester/Digital/DTU/62711/Christoffer/project_PWF' since last save. 
// Tcl Message: Scanning sources... Finished scanning sources 
// Tcl Message: INFO: [Project 1-230] Project 'project_PWF.xpr' upgraded for this version of Vivado. INFO: [IP_Flow 19-234] Refreshing IP repositories INFO: [IP_Flow 19-1704] No user IP repositories specified 
// TclEventType: PROJECT_NEW
// [GUI Memory]: 112 MB (+4110kb) [00:00:44]
// [GUI Memory]: 126 MB (+9174kb) [00:00:44]
// WARNING: HEventQueue.dispatchEvent() is taking  2275 ms.
// Tcl Message: INFO: [IP_Flow 19-2313] Loaded Vivado IP repository 'D:/Vivado/2020.1/data/ip'. 
// Project name: project_PWF; location: C:/Users/felix/Documents/DTU/62711_Digital_systems_design/Git/DTU/62711/Christoffer/project_PWF; part: xc7a100tcsg324-1
// Tcl Message: open_project: Time (s): cpu = 00:00:13 ; elapsed = 00:00:06 . Memory (MB): peak = 1033.508 ; gain = 0.000 
dismissDialog("Open Project"); // bz (cs)
// [GUI Memory]: 134 MB (+1003kb) [00:00:46]
// Tcl Message: update_compile_order -fileset sources_1 
// Elapsed time: 22 seconds
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Syntax Error Files]", 1); // B (F, cs)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Syntax Error Files, PortReg8x8.vhd]", 2, false); // B (F, cs)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Syntax Error Files, PortReg8x8.vhd]", 2, false, false, false, false, false, true); // B (F, cs) - Double Click
// Elapsed time: 151 seconds
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, PWB_full(Behavioral) (PWB_full.vhd)]", 4); // B (F, cs)
expandTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Black_box_datapath(Behavioral) (Black_box_datapath.vhd)]", 10); // B (F, cs)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Black_box_datapath(Behavioral) (Black_box_datapath.vhd), Reg16 : top_module_RF(Behavioral) (top_module_RF.vhd)]", 11, true); // B (F, cs) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Black_box_datapath(Behavioral) (Black_box_datapath.vhd), Reg16 : top_module_RF(Behavioral) (top_module_RF.vhd), Reg : registerR16(Behavioral) (registerR16.vhd)]", 12, true, false, false, false, false, true); // B (F, cs) - Double Click - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Black_box_datapath(Behavioral) (Black_box_datapath.vhd), Reg16 : top_module_RF(Behavioral) (top_module_RF.vhd), Reg : registerR16(Behavioral) (registerR16.vhd)]", 12, true); // B (F, cs) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Black_box_datapath(Behavioral) (Black_box_datapath.vhd), Reg16 : top_module_RF(Behavioral) (top_module_RF.vhd), Reg : registerR16(Behavioral) (registerR16.vhd), RegisterR0[0].UR0 : D_FF_EN_RESET(Behavioral) (D_FF_EN_RESET.vhd)]", 13, false, false, false, false, false, true); // B (F, cs) - Double Click
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Black_box_datapath(Behavioral) (Black_box_datapath.vhd), Reg16 : top_module_RF(Behavioral) (top_module_RF.vhd), Reg : registerR16(Behavioral) (registerR16.vhd), RegisterR0[0].UR0 : D_FF_EN_RESET(Behavioral) (D_FF_EN_RESET.vhd)]", 13, false); // B (F, cs)
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Black_box_datapath(Behavioral) (Black_box_datapath.vhd), Reg16 : top_module_RF(Behavioral) (top_module_RF.vhd), Reg : registerR16(Behavioral) (registerR16.vhd), RegisterR0[0].UR0 : D_FF_EN_RESET(Behavioral) (D_FF_EN_RESET.vhd)]", 13, false, false, false, false, false, true); // B (F, cs) - Double Click
// Elapsed time: 13 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PortReg8x8.vhd", 1); // m (l, cs)
selectCodeEditor("PortReg8x8.vhd", 496, 165); // bP (w, cs)
// Elapsed time: 15 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "D_FF_EN_RESET.vhd", 4); // m (l, cs)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PortReg8x8.vhd", 1); // m (l, cs)
// Elapsed time: 51 seconds
selectCodeEditor("PortReg8x8.vhd", 299, 128); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 299, 123); // bP (w, cs)
// Elapsed time: 14 seconds
selectCodeEditor("PortReg8x8.vhd", 99, 139); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 161, 143); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 187, 162); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 189, 172); // bP (w, cs)
// Elapsed time: 10 seconds
selectCodeEditor("PortReg8x8.vhd", 353, 137); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 376, 158); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 358, 133); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 322, 136); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 408, 138); // bP (w, cs)
// Elapsed time: 19 seconds
selectCodeEditor("PortReg8x8.vhd", 169, 139); // bP (w, cs)
// Elapsed time: 22 seconds
selectCodeEditor("PortReg8x8.vhd", 810, 134); // bP (w, cs)
// Elapsed time: 11 seconds
selectCodeEditor("PortReg8x8.vhd", 835, 130); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 674, 137); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 59, 144); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 629, 140); // bP (w, cs)
// Elapsed time: 20 seconds
selectCodeEditor("PortReg8x8.vhd", 621, 137); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 647, 206); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 726, 202); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 654, 239); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 708, 246); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 648, 236); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 193, 205); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 197, 235); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 79, 285); // bP (w, cs)
// Elapsed time: 13 seconds
selectCodeEditor("PortReg8x8.vhd", 37, 164); // bP (w, cs)
// Elapsed time: 19 seconds
selectCodeEditor("PortReg8x8.vhd", 106, 119); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 665, 210); // bP (w, cs)
// [GUI Memory]: 141 MB (+653kb) [00:12:18]
// Elapsed time: 898 seconds
selectCodeEditor("PortReg8x8.vhd", 115, 199); // bP (w, cs)
// Elapsed time: 17 seconds
selectCodeEditor("PortReg8x8.vhd", 114, 308); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 115, 99); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 113, 199); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 113, 302); // bP (w, cs)
// Elapsed time: 53 seconds
selectCodeEditor("PortReg8x8.vhd", 298, 205); // bP (w, cs)
// Elapsed time: 65 seconds
selectCodeEditor("PortReg8x8.vhd", 440, 268); // bP (w, cs)
// Elapsed time: 13 seconds
selectCodeEditor("PortReg8x8.vhd", 324, 77); // bP (w, cs)
// Elapsed time: 22 seconds
selectCodeEditor("PortReg8x8.vhd", 109, 138); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 107, 243); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 105, 347); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 107, 269); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 107, 235); // bP (w, cs)
// Elapsed time: 25 seconds
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "D_FF_EN_RESET.vhd", 4); // m (l, cs)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "registerR16.vhd", 3); // m (l, cs)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PortReg8x8.vhd", 1); // m (l, cs)
selectCodeEditor("PortReg8x8.vhd", 465, 142); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 489, 66); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 278, 142); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'c'); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 323, 240); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'v'); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 289, 347); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'v'); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 283, 264); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'v'); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 280, 244); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'v'); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 231, 140); // bP (w, cs)
// Elapsed time: 35 seconds
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Black_box_datapath(Behavioral) (Black_box_datapath.vhd), Reg16 : top_module_RF(Behavioral) (top_module_RF.vhd), Reg : registerR16(Behavioral) (registerR16.vhd)]", 12, true); // B (F, cs) - Node
selectTree(PAResourceEtoH.FileSetPanel_FILE_SET_PANEL_TREE, "[root, Design Sources, Black_box_datapath(Behavioral) (Black_box_datapath.vhd), Reg16 : top_module_RF(Behavioral) (top_module_RF.vhd), Reg : registerR16(Behavioral) (registerR16.vhd)]", 12, true, false, false, false, false, true); // B (F, cs) - Double Click - Node
// Elapsed time: 21 seconds
selectCodeEditor("registerR16.vhd", 96, 114); // bP (w, cs)
typeControlKey((HResource) null, "registerR16.vhd", 'c'); // bP (w, cs)
selectTab("PlanAheadTabBaseWorkspace_JideTabbedPane", (HResource) null, "PortReg8x8.vhd", 1); // m (l, cs)
selectCodeEditor("PortReg8x8.vhd", 384, 311); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 15, 348); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'v'); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 0, 350); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 135, 345); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 244, 286); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 439, 288); // bP (w, cs)
// Elapsed time: 13 seconds
selectCodeEditor("PortReg8x8.vhd", 386, 265); // bP (w, cs)
// HMemoryUtils.trashcanNow. Engine heap size: 1,018 MB. GUI used memory: 78 MB. Current time: 4/27/23, 9:51:02 AM CEST
selectCodeEditor("PortReg8x8.vhd", 548, 227); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 279, 198); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'c'); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 281, 308); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'v'); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 286, 218); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'v'); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 279, 334); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'v'); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 281, 306); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'v'); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 305, 100); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 299, 200); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 465, 169); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 297, 311); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 478, 179); // bP (w, cs)
// Elapsed time: 27 seconds
selectCodeEditor("PortReg8x8.vhd", 35, 53); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'c'); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 180, 67); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'v'); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'v'); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'v'); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'v'); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'v'); // bP (w, cs)
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
typeControlKey(null, null, 'z');
selectCodeEditor("PortReg8x8.vhd", 285, 159); // bP (w, cs)
// Elapsed time: 18 seconds
selectCodeEditor("PortReg8x8.vhd", 404, 149); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 168, 182); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 3, 158); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'c'); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 46, 243); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'v'); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 37, 217); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'c'); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 182, 239); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'v'); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'v'); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'v'); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'v'); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 168, 221); // bP (w, cs)
// Elapsed time: 12 seconds
selectCodeEditor("PortReg8x8.vhd", 115, 178); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 227, 178); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'c'); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 32, 224); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'v'); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 37, 267); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'v'); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 33, 310); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'v'); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 33, 345); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 182, 284); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 35, 237); // bP (w, cs)
typeControlKey((HResource) null, "PortReg8x8.vhd", 'v'); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 285, 219); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 286, 262); // bP (w, cs)
// Elapsed time: 13 seconds
selectCodeEditor("PortReg8x8.vhd", 286, 311); // bP (w, cs)
selectCodeEditor("PortReg8x8.vhd", 267, 285); // bP (w, cs)
// Elapsed time: 37 seconds
selectCodeEditor("PortReg8x8.vhd", 199, 202); // bP (w, cs)
// TclEventType: DG_GRAPH_STALE
// TclEventType: FILE_SET_CHANGE
